//
//  AgentsViewController.swift
//  NotGuitarSchool
//
//  Created by Egorio on 30.09.2025.
//

import UIKit

final class AgentsViewController: UIViewController {

    // MARK: - UI Components
    private let tableView = UITableView()

    // MARK: - Data
    private let agents: [(String, String, String)] = [
        ("–ê–ª–ª–∞ –ü—É–≥–∞—á–µ–≤–∞", "–ü–µ–≤–∏—Ü–∞", "–ó–∞–ø—Ä–µ—â–µ–Ω–∞ —Å 2022 –≥–æ–¥–∞"),
        ("–ú–∞–∫—Å–∏–º –ì–∞–ª–∫–∏–Ω", "–ü–∞—Ä–æ–¥–∏—Å—Ç", "–ó–∞–ø—Ä–µ—â–µ–Ω —Å 2022 –≥–æ–¥–∞"),
        ("–ò–≥–æ—Ä—å –ù–∏–∫–æ–ª–∞–µ–≤", "–ö–æ–º–ø–æ–∑–∏—Ç–æ—Ä", "–ó–∞–ø—Ä–µ—â–µ–Ω —Å 2023 –≥–æ–¥–∞"),
        ("–§–∏–ª–∏–ø–ø –ö–∏—Ä–∫–æ—Ä–æ–≤", "–ü–µ–≤–µ—Ü", "–ó–∞–ø—Ä–µ—â–µ–Ω —Å 2022 –≥–æ–¥–∞"),
        ("–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –†–æ–∑–µ–Ω–±–∞—É–º", "–ë–∞—Ä–¥", "–ó–∞–ø—Ä–µ—â–µ–Ω —Å 2023 –≥–æ–¥–∞"),
        ("–õ–∞—Ä–∏—Å–∞ –î–æ–ª–∏–Ω–∞", "–ü–µ–≤–∏—Ü–∞", "–ó–∞–ø—Ä–µ—â–µ–Ω–∞ —Å 2022 –≥–æ–¥–∞"),
        ("–í–∞–ª–µ—Ä–∏–π –ú–µ–ª–∞–¥–∑–µ", "–ü–µ–≤–µ—Ü", "–ó–∞–ø—Ä–µ—â–µ–Ω —Å 2023 –≥–æ–¥–∞"),
        ("–ê–Ω–∏ –õ–æ—Ä–∞–∫", "–ü–µ–≤–∏—Ü–∞", "–ó–∞–ø—Ä–µ—â–µ–Ω–∞ —Å 2022 –≥–æ–¥–∞"),
        ("–°–µ—Ä–≥–µ–π –õ–∞–∑–∞—Ä–µ–≤", "–ü–µ–≤–µ—Ü", "–ó–∞–ø—Ä–µ—â–µ–Ω —Å 2023 –≥–æ–¥–∞"),
        ("–ü–æ–ª–∏–Ω–∞ –ì–∞–≥–∞—Ä–∏–Ω–∞", "–ü–µ–≤–∏—Ü–∞", "–ó–∞–ø—Ä–µ—â–µ–Ω–∞ —Å 2022 –≥–æ–¥–∞")
    ]

    // MARK: - Lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        setupUI()
        setupTableView()
    }

    // MARK: - Setup
    private func setupUI() {
        view.backgroundColor = AppColors.backgroundColor
        title = "–†–µ–µ—Å—Ç—Ä –º—É–∑—ã–∫–∞–Ω—Ç–æ–≤"

        navigationItem.leftBarButtonItem = UIBarButtonItem(
            barButtonSystemItem: .close,
            target: self,
            action: #selector(closeButtonTapped)
        )
    }

    private func setupTableView() {
        view.addSubview(tableView)
        tableView.translatesAutoresizingMaskIntoConstraints = false
        NSLayoutConstraint.activate([
            tableView.topAnchor.constraint(equalTo: view.safeAreaLayoutGuide.topAnchor),
            tableView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
            tableView.trailingAnchor.constraint(equalTo: view.trailingAnchor),
            tableView.bottomAnchor.constraint(equalTo: view.bottomAnchor)
        ])

        tableView.delegate = self
        tableView.dataSource = self
        tableView.backgroundColor = .clear
        tableView.separatorStyle = .none

        // Register cell (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π reuseIdentifier)
        tableView.register(AgentTableViewCell.self, forCellReuseIdentifier: AgentTableViewCell.reuseIdentifier)

        // –ê–≤—Ç–æ-–≤—ã—Å–æ—Ç–∞
        tableView.rowHeight = UITableView.automaticDimension
        tableView.estimatedRowHeight = 100
    }

    // MARK: - Actions
    @objc private func closeButtonTapped() {
        dismiss(animated: true)
    }
}

// MARK: - UITableViewDataSource
extension AgentsViewController: UITableViewDataSource {

    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return agents.count
    }

    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {

        // –î–µ–∫—å—é –ø–æ —Ç–æ–º—É –∂–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É, —á—Ç–æ –∏ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        let cell = tableView.dequeueReusableCell(withIdentifier: AgentTableViewCell.reuseIdentifier, for: indexPath) as! AgentTableViewCell
        let agent = agents[indexPath.row]
        cell.configure(name: agent.0, profession: agent.1, status: agent.2)
        return cell
    }
}

// MARK: - UITableViewDelegate
extension AgentsViewController: UITableViewDelegate {
    // –º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å ‚Äî –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–µ–Ω –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return UITableView.automaticDimension
    }
}

// MARK: - AgentTableViewCell
final class AgentTableViewCell: UITableViewCell {

    static let reuseIdentifier = "AgentCell"

    private let containerView = UIView()
    private let nameLabel = UILabel()
    private let professionLabel = UILabel()
    private let statusLabel = UILabel()
    private let iconLabel = UILabel()

    override init(style: UITableViewCell.CellStyle, reuseIdentifier: String?) {
        super.init(style: style, reuseIdentifier: reuseIdentifier)
        setupUI()
    }

    required init?(coder: NSCoder) {
        super.init(coder: coder)
        setupUI()
    }

    private func setupUI() {
        backgroundColor = .clear
        selectionStyle = .none

        containerView.backgroundColor = AppColors.componentsColor
        containerView.layer.cornerRadius = 12
        containerView.layer.shadowColor = UIColor.black.cgColor
        containerView.layer.shadowOffset = CGSize(width: 0, height: 2)
        containerView.layer.shadowRadius = 4
        containerView.layer.shadowOpacity = 0.1

        iconLabel.text = "üö´"
        iconLabel.font = UIFont.systemFont(ofSize: 24)
        iconLabel.textAlignment = .center
        iconLabel.translatesAutoresizingMaskIntoConstraints = false

        nameLabel.font = UIFont.boldSystemFont(ofSize: 16)
        nameLabel.textColor = AppColors.textColor
        nameLabel.numberOfLines = 0
        nameLabel.translatesAutoresizingMaskIntoConstraints = false

        professionLabel.font = UIFont.systemFont(ofSize: 14)
        professionLabel.textColor = AppColors.componentsTextColor
        professionLabel.numberOfLines = 0
        professionLabel.translatesAutoresizingMaskIntoConstraints = false

        statusLabel.font = UIFont.systemFont(ofSize: 12, weight: .medium)
        statusLabel.textColor = .systemRed
        statusLabel.numberOfLines = 0
        statusLabel.translatesAutoresizingMaskIntoConstraints = false

        contentView.addSubview(containerView)
        containerView.translatesAutoresizingMaskIntoConstraints = false

        containerView.addSubview(iconLabel)
        containerView.addSubview(nameLabel)
        containerView.addSubview(professionLabel)
        containerView.addSubview(statusLabel)

        // Constraints (—É–±—Ä–∞–ª —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤—ã—Å–æ—Ç—É containerView)
        NSLayoutConstraint.activate([
            containerView.topAnchor.constraint(equalTo: contentView.topAnchor, constant: 8),
            containerView.leadingAnchor.constraint(equalTo: contentView.leadingAnchor, constant: 16),
            containerView.trailingAnchor.constraint(equalTo: contentView.trailingAnchor, constant: -16),
            containerView.bottomAnchor.constraint(equalTo: contentView.bottomAnchor, constant: -8),

            iconLabel.leadingAnchor.constraint(equalTo: containerView.leadingAnchor, constant: 12),
            iconLabel.centerYAnchor.constraint(equalTo: containerView.centerYAnchor),
            iconLabel.widthAnchor.constraint(equalToConstant: 36),
            iconLabel.heightAnchor.constraint(equalToConstant: 36),

            nameLabel.leadingAnchor.constraint(equalTo: iconLabel.trailingAnchor, constant: 12),
            nameLabel.topAnchor.constraint(equalTo: containerView.topAnchor, constant: 12),
            nameLabel.trailingAnchor.constraint(equalTo: containerView.trailingAnchor, constant: -12),

            professionLabel.leadingAnchor.constraint(equalTo: nameLabel.leadingAnchor),
            professionLabel.topAnchor.constraint(equalTo: nameLabel.bottomAnchor, constant: 4),
            professionLabel.trailingAnchor.constraint(equalTo: nameLabel.trailingAnchor),

            statusLabel.leadingAnchor.constraint(equalTo: nameLabel.leadingAnchor),
            statusLabel.topAnchor.constraint(equalTo: professionLabel.bottomAnchor, constant: 4),
            statusLabel.trailingAnchor.constraint(equalTo: nameLabel.trailingAnchor),
            statusLabel.bottomAnchor.constraint(equalTo: containerView.bottomAnchor, constant: -12)
        ])

        // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã, —á—Ç–æ–±—ã –∏–∫–æ–Ω–∫–∞ –Ω–µ —Ä–∞—Å—Ç—è–≥–∏–≤–∞–ª–∞ —Å—Ç—Ä–æ–∫—É
        iconLabel.setContentHuggingPriority(.required, for: .horizontal)
        iconLabel.setContentCompressionResistancePriority(.required, for: .horizontal)
    }

    // <- –ó–î–ï–°–¨ –∏–º–µ–Ω–Ω–æ —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å
    func configure(name: String, profession: String, status: String) {
        nameLabel.text = name
        professionLabel.text = profession
        statusLabel.text = status
    }
}
